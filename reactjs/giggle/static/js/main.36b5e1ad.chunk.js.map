{"version":3,"sources":["SearchForm.js","index.js"],"names":["SearchForm","props","react_default","a","createElement","onSubmit","event","preventDefault","onFormSubmit","className","type","onChange","onSearchValueChange","target","value","disabled","isSearching","onClick","onSingleSearchClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchTerm","jokes","isFetchingJokes","onSearchChange","bind","assertThisInitialized","searchJokes","_this2","limit","arguments","length","undefined","setState","fetch","concat","method","headers","Accept","then","response","json","results","map","item","key","id","joke","_this3","src","alt","src_SearchForm_0","renderJokes","React","Component","rootElt","document","getElementById","ReactDOM","render","src_App","version"],"mappings":"wNAyBeA,SAtBI,SAAAC,GAMjB,OACEC,EAAAC,EAAAC,cAAA,QAAMC,SANS,SAACC,GAChBA,EAAMC,iBACNN,EAAMO,gBAIoBC,UAAU,eAChCP,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLC,SAAU,SAACL,GAAD,OAAUL,EAAMW,oBAAoBN,EAAMO,OAAOC,UAE7DZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQW,SAAUd,EAAMe,aAAxB,iBACAd,EAAAC,EAAAC,cAAA,UAAQa,QAAShB,EAAMiB,oBAAqBH,SAAUd,EAAMe,aAA5D,uBCZJG,qBAEJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXC,WAAY,GACZC,MAAO,GACPC,iBAAiB,GAGnBV,EAAKW,eAAiBX,EAAKW,eAAeC,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACtBA,EAAKc,YAAiBd,EAAKc,YAAYF,KAAjBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAVVA,6EAaU,IAAAe,EAAAZ,KAAZa,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAClBd,KAAKiB,SAAS,CAAEV,iBAAiB,IAEjCW,MAAK,0CAAAC,OAA2CnB,KAAKI,MAAMC,WAAtD,WAAAc,OAA0EN,GAAS,CACtFO,OAAQ,MACRC,QAAS,CAAEC,OAAQ,sBAElBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GACJ,IAAMnB,EAAQmB,EAAKC,QACnBd,EAAKK,SAAS,CACZX,QACAC,iBAAiB,6CAKVhB,GACbS,KAAKiB,SAAS,CAAEZ,WAAYd,0CAI5B,OACEZ,EAAAC,EAAAC,cAAA,MAAIK,UAAU,cACXc,KAAKI,MAAME,MAAMqB,IAAI,SAAAC,GAAI,OAAIjD,EAAAC,EAAAC,cAAA,MAAIgD,IAAKD,EAAKE,IAAKF,EAAKG,0CAKnD,IAAAC,EAAAhC,KACP,OACErB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OAAO+C,IAAI,oBAAoBC,IAAI,KAClDvD,EAAAC,EAAAC,cAACsD,EAAD,CACElD,aAAce,KAAKW,YACnBtB,oBAAqBW,KAAKQ,eAC1Bf,YAAaO,KAAKI,MAAMG,gBACxBZ,oBAAqB,kBAAKqC,EAAKrB,YAAY,MAE5CX,KAAKI,MAAMG,gBAAkB,eAAiBP,KAAKoC,sBAtD1CC,IAAMC,YA6DlBC,EAAUC,SAASC,eAAe,QACxCC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,CAAKC,QAAQ,QAAUN","file":"static/js/main.36b5e1ad.chunk.js","sourcesContent":["import React from 'react'\nimport './SearchForm.css'\n\nconst SearchForm = props => {\n  const onSubmit = (event)=> {\n    event.preventDefault()\n    props.onFormSubmit() \n  }\n\n  return (\n    <form onSubmit={onSubmit} className='search-form'>\n        <input\n          type=\"text\"\n          onChange={(event)=> props.onSearchValueChange(event.target.value)}\n        />\n        <div>\n          <button disabled={props.isSearching}>Giggle Search</button>\n          <button onClick={props.onSingleSearchClick} disabled={props.isSearching}>\n            Tickle Me Funny\n          </button>\n        </div>\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport SearchForm from './SearchForm'\nimport './styles.css'\n\nclass App extends React.Component {\n  \n  constructor() {\n    super() \n\n    this.state = {\n      searchTerm: '',\n      jokes: [],\n      isFetchingJokes: false,\n    }\n  \n    this.onSearchChange = this.onSearchChange.bind(this)\n    this.searchJokes    = this.searchJokes.bind(this)\n  }\n\n  searchJokes(limit = 12) {\n    this.setState({ isFetchingJokes: true })\n\n    fetch(`https://icanhazdadjoke.com/search?term=${this.state.searchTerm}&limit=${limit}`, {\n      method: 'GET',\n      headers: { Accept: 'application/json' }\n    })\n      .then(response => response.json())\n      .then(json => {\n        const jokes = json.results\n        this.setState({\n          jokes,\n          isFetchingJokes: false\n        })\n      }) \n  }\n\n  onSearchChange(value) {\n    this.setState({ searchTerm: value  })\n  }\n  \n  renderJokes() {\n    return (\n      <ul className='jokes-list'>\n        {this.state.jokes.map(item => <li key={item.id}>{item.joke}</li>)}\n      </ul>\n    )\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <img className='logo' src='./giggle-logo.png' alt='' />\n        <SearchForm \n          onFormSubmit={this.searchJokes} \n          onSearchValueChange={this.onSearchChange} \n          isSearching={this.state.isFetchingJokes}\n          onSingleSearchClick={()=> this.searchJokes(1)} />\n\n        {this.state.isFetchingJokes ? \"Searching...\" : this.renderJokes()}\n\n      </div>\n    )\n  }\n}\n\nconst rootElt = document.getElementById('root')\nReactDOM.render(<App version=\"1.0\" />, rootElt)\n"],"sourceRoot":""}